{"version":3,"file":"Input-5f518c4b.js","sources":["../../src/components/form/Input.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {\n\tforwardRef,\n\ttype ChangeEvent,\n\ttype ComponentPropsWithRef\n} from 'react';\nimport { type Size } from '../../types/general';\n\nexport type BaseInputProps = {\n\tvariant?: 'standard' | 'branded';\n\tinputSize?: Size;\n\trequired?: boolean;\n};\n\nexport type InputProps = ComponentPropsWithRef<'input'> & BaseInputProps;\n\n// FIXME: this is a temporary solution to the type issue, passing any props\nexport const generateBaseInputStyles = (props: any) => css`\n\t--input-status-color-main: blue;\n\t--input-background-color: var(--color-white);\n\t--input-opacity: 1;\n\n\t// if has value and is invalid\n\t&.touched {\n\t\t&:invalid,\n\t\t&:out-of-range {\n\t\t\t--input-status-color-main: var(--color-feedback-error-main);\n\t\t\t--input-status-color-light: var(--color-feedback-error-light);\n\t\t\t--input-border-color: var(--color-feedback-error-main);\n\t\t\t--input-background-color: var(--color-feedback-error-light);\n\n\t\t\t// temporary\n\t\t\t+ .input-helper-text {\n\t\t\t\tcolor: var(--color-feedback-error-main);\n\t\t\t}\n\t\t}\n\n\t\t&:valid,\n\t\t&:in-range {\n\t\t\t--input-status-color-main: var(--color-feedback-success-light);\n\t\t\t--input-border-color: var(--color-feedback-success-main);\n\t\t\t--input-background-color: var(--color-feedback-success-lightest);\n\n\t\t\t// temporary\n\t\t\t+ .input-helper-text {\n\t\t\t\tcolor: var(--color-feedback-success-main);\n\t\t\t}\n\t\t}\n\t}\n\n\t&:disabled {\n\t\t--input-opacity: 0.5;\n\n\t\t~ .input-helper-text {\n\t\t\topacity: 0.5;\n\t\t}\n\t}\n\n\tborder: unset;\n\tpadding: unset;\n\toutline: unset;\n\n\theight: var(--input-height-${props.inputSize});\n\tpadding-inline: var(--input-spacing-padding-inline-${props.inputSize});\n\tfont-size: var(--input-font-size-${props.inputSize});\n\n\tbackground-color: var(--input-background-color);\n\n\tcolor: var(--input-text-color);\n\tbox-shadow: var(--input-shadow);\n\tborder-radius: var(--input-bezel-${props.inputSize});\n\topacity: var(--input-opacity);\n\n\tborder-style: var(--input-border-style);\n\tborder-width: var(--input-border-width);\n\tborder-color: var(--input-border-color);\n`;\n\nexport const BaseInputElement = styled.input<InputProps>(\n\tgenerateBaseInputStyles\n);\n\nconst inputTouched = new Event('touched', { bubbles: true });\n\ndeclare module 'react' {}\n\nconst addTouchedState = (el: HTMLInputElement): void => {\n\tif (el.value && !el.classList.contains('touched')) {\n\t\tel.dispatchEvent(inputTouched);\n\t\tel.classList.add('touched');\n\t\treturn;\n\t}\n\n\tif (!el.value && el.classList.contains('touched')) {\n\t\tel.classList.remove('touched');\n\t}\n};\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n\t({ onChange, ...props }, ref) => {\n\t\tconst handleOnChange = (event: ChangeEvent<HTMLInputElement>): void => {\n\t\t\taddTouchedState(event.target);\n\t\t\tonChange?.(event);\n\t\t};\n\n\t\treturn (\n\t\t\t<BaseInputElement {...props} ref={ref} onChange={handleOnChange} />\n\t\t);\n\t}\n);\n\nInput.displayName = 'Input';\n"],"names":["generateBaseInputStyles","props","css","BaseInputElement","styled","inputTouched","addTouchedState","el","Input","forwardRef","onChange","ref","jsx","event"],"mappings":"wOAkBO,MAAAA,EAAAC,GAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAgDD,EAAA;AAAA,sDA6CnBA,EAAA;AAAA,oCACwBA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAClBA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcnCE,EAAAC,EAAA,MAAgCJ,CAEvC,EAEAK,EAAA,IAAA,MAAA,UAAA,CAAA,QAAA,EAAA,CAAA,EAIAC,EAAAC,GAAA,CACC,GAAAA,EAAA,OAAA,CAAAA,EAAA,UAAA,SAAA,SAAA,EAAA,CACCA,EAAA,cAAAF,CAAA,EACAE,EAAA,UAAA,IAAA,SAAA,EACA,OAGD,CAAAA,EAAA,OAAAA,EAAA,UAAA,SAAA,SAAA,GACCA,EAAA,UAAA,OAAA,SAAA,CAEF,EAEOC,EAAAC,EAAA,WAAc,CAAA,CAAA,SAAAC,EAAA,GAAAT,CAAA,EAAAU,IAOnBC,EAAAT,EAAA,CAAA,GAAAF,EAAA,IAAAU,EAAA,SALAE,GAAA,CACCP,EAAAO,EAAA,MAAA,EACAH,GAAA,MAAAA,EAAAG,EAAgB,CAGjB,CAAA,CAIF,EAEAL,EAAA,YAAA"}