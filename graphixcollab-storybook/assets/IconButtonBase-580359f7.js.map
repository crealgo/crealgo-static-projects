{"version":3,"file":"IconButtonBase-580359f7.js","sources":["../../src/components/base/IconButtonBase.tsx"],"sourcesContent":["import { styled } from '@mui/material';\nimport MuiButtonBase from '@mui/material/ButtonBase';\nimport {\n\tforwardRef,\n\ttype ComponentPropsWithRef,\n\ttype ElementType\n} from 'react';\nimport { _e } from '../../utils/excludePropsFromForwarding';\nimport { type ButtonBaseSizes } from '../atoms/ButtonBase';\n\nexport type IconButtonBaseProps = {\n\thref?: string;\n\tIcon?: ElementType;\n\tsize?: ButtonBaseSizes;\n} & ComponentPropsWithRef<'button'>;\n\nconst StyledButton = styled(\n\tMuiButtonBase,\n\t_e('endIcon', 'startIcon', 'size')\n)<IconButtonBaseProps>`\n\tcursor: pointer;\n\tdisplay: inline-flex;\n\talign-items: center;\n\tjustify-content: center;\n\n\tborder-radius: 0.25rem;\n\theight: 2.5rem;\n\taspect-ratio: 1;\n`;\n\nexport const IconButtonBase = forwardRef<\n\tHTMLButtonElement,\n\tIconButtonBaseProps\n>(({ children, Icon, ...props }, ref) => (\n\t<StyledButton {...props} ref={ref} role=\"button\">\n\t\t{children ? children : Icon ? <Icon /> : null}\n\t</StyledButton>\n));\n\nIconButtonBase.displayName = 'IconButtonBase';\n"],"names":["StyledButton","styled","MuiButtonBase","_e","IconButtonBase","forwardRef","children","Icon","props","ref","jsx"],"mappings":"kQAgBA,MAAAA,EAAAC,EAAqBC,EACpBC,EAAA,UAAA,YAAA,MAAA,CAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWOC,EAAAC,EAAA,WAAA,CAAA,CAAA,SAAAC,EAAA,KAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAAC,EAAAV,EAAA,CAAA,GAAAQ,EAAA,IAAAC,EAAA,KAAA,SAAA,SAAAH,IAAAC,EAAAG,EAAAH,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,EASPH,EAAA,YAAA"}