{"version":3,"file":"Select-6428b7c8.js","sources":["../../node_modules/@mui/icons-material/KeyboardArrowDown.js","../../src/components/form/Select.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDown');\nexports.default = _default;","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport ArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { forwardRef, type ComponentPropsWithRef, type FC } from 'react';\nimport { generateBaseInputStyles } from './generateBaseInputStyles';\nimport clsx from 'clsx';\n\nexport type SelectProps = {\n\toptions?: OptionBag[];\n} & BaseControlProps &\n\tComponentPropsWithRef<'select'>;\n\nconst SelectWrapper = styled('div')<SelectProps>(\n\t({ inputSize }) => css`\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\n\t\t& svg {\n\t\t\tpointer-events: none;\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\theight: var(--input-group-action-size-${inputSize});\n\t\t\twidth: var(--input-group-action-size-${inputSize});\n\t\t\tright: var(--input-spacing-gap-${inputSize});\n\t\t\ttransform: translateY(-50%);\n\t\t\topacity: 0.5;\n\t\t}\n\t`\n);\n\nconst StyledSelect = styled('select', {\n\tshouldForwardProp: prop =>\n\t\t!['inputSize', 'isTouched', 'isInvalid', 'isValid'].includes(prop)\n})<SelectProps>(\n\tprops => css`\n\t\t${generateBaseInputStyles({\n\t\t\tinputSize: props.inputSize\n\t\t})};\n\n\t\tpadding-inline: var(--select-spacing-padding-inline-${props.inputSize});\n\t\tappearance: none;\n\t\tcursor: pointer;\n\n\t\twidth: 100%;\n\t`\n);\n\nexport const Select = forwardRef<HTMLSelectElement, SelectProps>(\n\t({ options, inputSize = 'medium', className, ...props }, ref) => (\n\t\t<SelectWrapper\n\t\t\tclassName={clsx('Select-root', className)}\n\t\t\tinputSize={inputSize}\n\t\t>\n\t\t\t<StyledSelect {...props} ref={ref} inputSize={inputSize}>\n\t\t\t\t{options?.map(({ label, value }, optionIndex) => (\n\t\t\t\t\t<option key={optionIndex} value={value}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</StyledSelect>\n\t\t\t<ArrowDownIcon />\n\t\t</SelectWrapper>\n\t)\n);\n"],"names":["_interopRequireDefault","require$$0","KeyboardArrowDown","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","SelectWrapper","styled","inputSize","css","StyledSelect","prop","props","generateBaseInputStyles","Select","forwardRef","options","className","ref","jsxs","clsx","jsx","label","value","optionIndex","ArrowDownIcon"],"mappings":"iaAEIA,EAAyBC,EAC7B,OAAO,eAAeC,EAAS,aAAc,CAC3C,MAAO,EACT,CAAC,EACD,IAAeC,EAAAD,EAAA,QAAG,OACdE,EAAiBJ,EAAuBK,EAAA,CAAgC,EACxEC,EAAcC,EACdC,KAAeJ,EAAe,YAA2BE,EAAY,KAAK,OAAQ,CACpF,EAAG,yDACL,CAAC,EAAG,mBAAmB,EACvBH,EAAAD,EAAA,QAAkBM,ECAlB,MAAAC,EAAAC,EAAA,KAAA,EAAkC,CAAA,CAAA,UAAAC,CAAA,IAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACdD;AAAA,0CAQuBA;AAAA,oCACDA;AAAA;AAAA;AAAA;AAAA,EAM1C,EAEAE,EAAAH,EAAA,SAAA,CAAsC,kBAAAI,GAAA,CAAA,CAAA,YAAA,YAAA,YAAA,SAAA,EAAA,SAAAA,CAAA,CAGtC,CAAA,EAACC,GAAAH;AAAA,IACSI,EAAA,CACkB,UAAAD,EAAA,SACR,CAAA;AAAA;AAAA,wDACjBA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQH,EAEOE,EAAAC,EAAA,WAAe,CAAA,CAAA,QAAAC,EAAA,UAAAR,EAAA,SAAA,UAAAS,EAAA,GAAAL,CAAA,EAAAM,IAAAC,EAEpBb,EAAC,CAAA,UAAAc,EAAA,cAAAH,CAAA,EACwC,UAAAT,EACxC,SAAA,CAEAa,EAAAX,EAAA,CAAA,GAAAE,EAAA,IAAAM,EAAA,UAAAV,EAAA,SAAAQ,GAAA,YAAAA,EAAA,IAAA,CAAA,CAAA,MAAAM,EAAA,MAAAC,CAAA,EAAAC,IAAAH,EAAA,SAAA,CAAA,MAAAE,EAAA,SAAAD,CAAA,EAAAE,CAAA,GAAA,EAMAH,EAAAI,EAAA,EAAA,CACe,CAAA,CAAA,CAGlB","x_google_ignoreList":[0]}