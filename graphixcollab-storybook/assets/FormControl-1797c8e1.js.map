{"version":3,"file":"FormControl-1797c8e1.js","sources":["../../src/components/form/InputHelperText.tsx","../../src/components/form/utils/handleFormControlTouch.ts","../../src/components/form/FormControl.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const InputHelperText = styled.span`\n\tfont-weight: 500;\n\tfont-size: 0.75rem;\n\tline-height: 1rem;\n\n\tcolor: var(--color-text-secondary);\n`;\n","import { type SyntheticEvent } from 'react';\n\nexport const handleFormControlTouch = (event: SyntheticEvent<HTMLElement>) => {\n\tif (event.type === 'touched') {\n\t\tevent.stopPropagation();\n\n\t\t[\n\t\t\tevent.currentTarget,\n\t\t\t...event.currentTarget.querySelectorAll(\n\t\t\t\t'.input-label, .input-helper-text'\n\t\t\t)\n\t\t].forEach(el => {\n\t\t\tel.classList.add('touched');\n\t\t});\n\t}\n};\n","import styled from '@emotion/styled';\nimport clsx from 'clsx';\nimport { useEffect, useRef, type FC, type ReactNode } from 'react';\nimport { InputHelperText } from './InputHelperText';\nimport { handleFormControlTouch } from './utils/handleFormControlTouch';\n\nexport type FormControlProps = {\n\tlabel?: ReactNode;\n\tlabelFor?: string;\n\t// labelInfo?: string; // SEE blueprint js\n\thelperText?: ReactNode;\n\thelperTextId?: string;\n\tisRequired?: boolean;\n\tisFullWidth?: boolean;\n\t/**\n\t * This prop is primarily used for when the FormControl wraps a group of\n\t * radio buttons or checkboxes.\n\t *\n\t * @default false\n\t */\n\tisFieldset?: boolean;\n} & Pick<BaseComponentProps, 'className' | 'children'> &\n\tPick<BaseControlProps, 'isTouched' | 'isInvalid' | 'isValid'>;\n\nconst StyledLabel = styled.label`\n\tdisplay: inline-grid;\n\tgrid-template-columns: 1fr;\n\tborder: unset;\n\tpadding: unset;\n\n\tcolor: var(--color-text-primary);\n\tfont-size: 14px;\n\tline-height: 1rem;\n\tfont-weight: 500;\n\tletter-spacing: -0.1px;\n\n\t.FormControl-label {\n\t\tmargin-bottom: 0.25rem;\n\t\twidth: 100%;\n\t\tdisplay: block;\n\t}\n\n\t.FormControl-helper-text {\n\t\tmargin-top: 0.25rem;\n\t\tmax-width: 25rem;\n\t}\n\n\t&.is-full-width {\n\t\twidth: 100%;\n\t}\n\n\t&.is-fieldset .FormControl-label {\n\t\tpadding-bottom: 0.25rem;\n\t\tmargin-bottom: 0.5rem;\n\t\tborder-bottom: 1px solid var(--color-gray-400);\n\t}\n\n\t&.is-required .FormControl-label::after {\n\t\tcontent: '*';\n\t\tcolor: var(--color-feedback-error-main);\n\t}\n\n\t&.is-invalid {\n\t\t.FormControl-label,\n\t\t.FormControl-helper-text {\n\t\t\tcolor: var(--color-feedback-error-main);\n\t\t}\n\t}\n\n\t&.is-valid {\n\t\t.FormControl-label,\n\t\t.FormControl-helper-text {\n\t\t\tcolor: var(--color-feedback-success-main);\n\t\t}\n\t}\n`;\n\nexport const FormControl: FC<FormControlProps> = props => {\n\tconst wrapperRef = useRef<HTMLLabelElement>(null);\n\n\tuseEffect(() => {\n\t\tif (wrapperRef.current) {\n\t\t\tconst el = wrapperRef.current;\n\n\t\t\t// @ts-expect-error synthetic-event vs event\n\t\t\tel.addEventListener('touched', handleFormControlTouch);\n\n\t\t\treturn () => {\n\t\t\t\t// @ts-expect-error synthetic-event vs event\n\t\t\t\tel.removeEventListener('touched', handleFormControlTouch);\n\t\t\t};\n\t\t}\n\t}, [wrapperRef]);\n\n\tlet WrapperComponent: 'label' | 'fieldset' = 'label';\n\tlet LabelComponent: 'span' | 'legend' = 'span';\n\n\tif (props.isFieldset) {\n\t\tWrapperComponent = 'fieldset';\n\t\tLabelComponent = 'legend';\n\t}\n\n\treturn (\n\t\t<StyledLabel\n\t\t\tref={wrapperRef}\n\t\t\tas={WrapperComponent}\n\t\t\thtmlFor={props.labelFor}\n\t\t\tclassName={clsx(props.className, 'FormControl-root', {\n\t\t\t\t'is-full-width': props.isFullWidth,\n\t\t\t\t'is-fieldset': props.isFieldset,\n\t\t\t\t'is-required': props.isRequired,\n\t\t\t\t'is-invalid': props.isInvalid,\n\t\t\t\t'is-valid': props.isValid,\n\t\t\t\t'is-touched': props.isTouched\n\t\t\t})}\n\t\t>\n\t\t\t<LabelComponent className=\"FormControl-label\">\n\t\t\t\t{props.label}\n\t\t\t</LabelComponent>\n\t\t\t{props.children}\n\t\t\t{props.helperText && (\n\t\t\t\t<InputHelperText\n\t\t\t\t\tid={props.helperTextId}\n\t\t\t\t\tclassName=\"FormControl-helper-text\"\n\t\t\t\t>\n\t\t\t\t\t{props.helperText}\n\t\t\t\t</InputHelperText>\n\t\t\t)}\n\t\t</StyledLabel>\n\t);\n};\n"],"names":["InputHelperText","styled","handleFormControlTouch","event","el","StyledLabel","FormControl","props","wrapperRef","useRef","useEffect","WrapperComponent","LabelComponent","jsxs","clsx","jsx"],"mappings":"uNAEO,MAAAA,EAAAC,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oSCAM,MAAAC,EAA0BC,GAAuC,CACzEA,EAAM,OAAS,YAClBA,EAAM,gBAAgB,EAEtB,CACCA,EAAM,cACN,GAAGA,EAAM,cAAc,iBACtB,kCACD,CAAA,EACC,QAAcC,GAAA,CACZA,EAAA,UAAU,IAAI,SAAS,CAAA,CAC1B,EAEH,ECSAC,EAAAJ,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqDOK,EAAAC,GAAA,CACN,MAAAC,EAAAC,SAAA,IAAA,EAEAC,EAAAA,UAAA,IAAA,CACC,GAAAF,EAAA,QAAA,CACC,MAAAJ,EAAAI,EAAA,QAGA,OAAAJ,EAAA,iBAAA,UAAAF,CAAA,EAEA,IAAA,CAECE,EAAA,oBAAA,UAAAF,CAAA,CAAwD,EAE1D,EAAA,CAAAM,CAAA,CAAA,EAGD,IAAAG,EAAA,QACAC,EAAA,OAEA,OAAAL,EAAA,aACCI,EAAA,WACAC,EAAA,UAGDC,EACCR,EAAC,CAAA,IAAAG,EACK,GAAAG,EACD,QAAAJ,EAAA,SACW,UAAAO,EAAAP,EAAA,UAAA,mBAAA,CACsC,gBAAAA,EAAA,YAC7B,cAAAA,EAAA,WACF,cAAAA,EAAA,WACA,aAAAA,EAAA,UACD,WAAAA,EAAA,QACF,aAAAA,EAAA,SACE,CAAA,EACpB,SAAA,CAEDQ,EAAAH,EAAA,CAAA,UAAA,oBAAA,SAAAL,EAAA,MAAA,EAEAA,EAAA,SACOA,EAAA,YAAAQ,EAENf,EAAC,CAAA,GAAAO,EAAA,aACU,UAAA,0BACA,SAAAA,EAAA,UAEH,CAAA,CACR,CAAA,CAAA,CAIJ;"}