{"version":3,"file":"FormControl-68bdfda7.js","sources":["../../src/components/form/InputHelperText.tsx","../../src/components/form/utils/handleFormControlTouch.ts","../../src/components/form/FormControl.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const InputHelperText = styled.span`\n\tfont-weight: 500;\n\tfont-size: 0.75rem;\n\tline-height: 1rem;\n\n\tcolor: var(--color-text-secondary);\n`;\n","import { type SyntheticEvent } from 'react';\n\nexport const handleFormControlTouch = (event: SyntheticEvent<HTMLElement>) => {\n\tif (event.type === 'touched') {\n\t\tevent.stopPropagation();\n\n\t\t[\n\t\t\tevent.currentTarget,\n\t\t\t...event.currentTarget.querySelectorAll(\n\t\t\t\t'.input-label, .input-helper-text'\n\t\t\t)\n\t\t].forEach(el => {\n\t\t\tel.classList.add('touched');\n\t\t});\n\t}\n};\n","import styled from '@emotion/styled';\nimport clsx from 'clsx';\nimport { useEffect, useRef, type FC } from 'react';\nimport { InputHelperText } from './InputHelperText';\nimport { handleFormControlTouch } from './utils/handleFormControlTouch';\nimport { type BaseComponentProps } from '../../types/base';\n\nexport type FormControlProps = {\n\tlabel?: string;\n\tlabelFor?: string;\n\t// labelInfo?: string; // SEE blueprint js\n\thelperText?: string;\n\thelperTextId?: string;\n\tisFullWidth?: boolean;\n} & Pick<BaseComponentProps, 'className' | 'children'>;\n\nconst StyledLabel = styled.label`\n\tdisplay: inline-grid;\n\tgrid-template-columns: 1fr;\n\n\tcolor: var(--color-text-primary);\n\tfont-size: 14px;\n\tline-height: 1rem;\n\tfont-weight: 500;\n\tletter-spacing: -0.1px;\n\n\t.Select-root,\n\t.Input-root {\n\t\tmargin-top: 0.25rem;\n\t}\n\n\t.FormControl-helper-text {\n\t\tmargin-top: 0.25rem;\n\t}\n\n\t&.full-width {\n\t\twidth: 100%;\n\t}\n\n\t&.required {\n\t\t.input-label::after {\n\t\t\tcontent: '*';\n\t\t\tcolor: var(--color-feedback-error-main);\n\t\t}\n\t}\n`;\n\nexport const FormControl: FC<FormControlProps> = props => {\n\tconst wrapperRef = useRef<HTMLLabelElement>(null);\n\n\tuseEffect(() => {\n\t\tif (wrapperRef.current) {\n\t\t\tconst el = wrapperRef.current;\n\n\t\t\t// @ts-expect-error syntetic-event vs event\n\t\t\tel.addEventListener('touched', handleFormControlTouch);\n\n\t\t\treturn () => {\n\t\t\t\t// @ts-expect-error syntetic-event vs event\n\t\t\t\tel.removeEventListener('touched', handleFormControlTouch);\n\t\t\t};\n\t\t}\n\t}, [wrapperRef]);\n\n\treturn (\n\t\t<StyledLabel\n\t\t\tref={wrapperRef}\n\t\t\thtmlFor={props.labelFor}\n\t\t\tclassName={clsx(props.className, 'FormControl-root', {\n\t\t\t\t'full-width': props.isFullWidth\n\t\t\t})}\n\t\t>\n\t\t\t<span className=\"FormControl-label-text\">{props.label}</span>\n\t\t\t{props.children}\n\t\t\t{props.helperText && (\n\t\t\t\t<InputHelperText\n\t\t\t\t\tid={props.helperTextId}\n\t\t\t\t\tclassName=\"FormControl-helper-text\"\n\t\t\t\t>\n\t\t\t\t\t{props.helperText}\n\t\t\t\t</InputHelperText>\n\t\t\t)}\n\t\t</StyledLabel>\n\t);\n};\n"],"names":["InputHelperText","styled","handleFormControlTouch","event","el","StyledLabel","FormControl","props","wrapperRef","useRef","useEffect","jsxs","clsx","jsx"],"mappings":"kNAEO,MAAAA,EAAAC,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oSCAM,MAAAC,EAA0BC,GAAuC,CACzEA,EAAM,OAAS,YAClBA,EAAM,gBAAgB,EAEtB,CACCA,EAAM,cACN,GAAGA,EAAM,cAAc,iBACtB,kCACD,CAAA,EACC,QAAcC,GAAA,CACZA,EAAA,UAAU,IAAI,SAAS,CAAA,CAC1B,EAEH,ECCAC,EAAAJ,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BOK,EAAAC,GAAA,CACN,MAAAC,EAAAC,SAAA,IAAA,EAEAC,OAAAA,EAAAA,UAAA,IAAA,CACC,GAAAF,EAAA,QAAA,CACC,MAAAJ,EAAAI,EAAA,QAGA,OAAAJ,EAAA,iBAAA,UAAAF,CAAA,EAEA,IAAA,CAECE,EAAA,oBAAA,UAAAF,CAAA,CAAwD,EAE1D,EAAA,CAAAM,CAAA,CAAA,EAGDG,EACCN,EAAC,CAAA,IAAAG,EACK,QAAAD,EAAA,SACU,UAAAK,EAAAL,EAAA,UAAA,mBAAA,CACsC,aAAAA,EAAA,WAChC,CAAA,EACpB,SAAA,CAEDM,EAAA,OAAA,CAAA,UAAA,yBAAA,SAAAN,EAAA,MAAA,EAAsDA,EAAA,SAC/CA,EAAA,YAAAM,EAENb,EAAC,CAAA,GAAAO,EAAA,aACU,UAAA,0BACA,SAAAA,EAAA,UAEH,CAAA,CACR,CAAA,CAAA,CAIJ"}